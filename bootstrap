#!/usr/bin/env ngs

# apt-get install -y libgc-dev libffi-dev libjson-c-dev peg libpcre3-dev make cmake pandoc pkg-config build-essential
# yum install -y gc-devel libffi-devel json-c-devel ?peg? pcre-devel make cmake3 ?pandoc? pkgconfig 
# yum groupinstall "Development Tools"

# https://docs.aws.amazon.com/lambda/latest/dg/runtimes-custom.html
# https://docs.aws.amazon.com/lambda/latest/dg/runtimes-walkthrough.html
# https://aws.amazon.com/blogs/apn/aws-lambda-custom-runtime-for-php-a-practical-example/

log("Starting")

t = ENV._HANDLER.split('.') # -> F(file,func)
file = t[0]
func = t[1]

log("Loading ${ENV.LAMBDA_TASK_ROOT / file}")

handler = require(ENV.LAMBDA_TASK_ROOT / file)[func]

while true {
	# https://docs.aws.amazon.com/lambda/latest/dg/runtimes-api.html#runtimes-api-next
	log("Waiting for invocation")
	event = ``curl -sS -L -i "http://${ENV.AWS_LAMBDA_RUNTIME_API}/2018-06-01/runtime/invocation/next"``
	request_id = event.headers['Lambda-Runtime-Aws-Request-Id']
	log("Handling request ${request_id}")
	try {
		# ENV._X_AMZN_TRACE_ID = event.headers['Lambda-Runtime-Trace-Id']
		response = handler(event.body.decode_json())
		log("Sending response ${request_id}")
		# https://docs.aws.amazon.com/lambda/latest/dg/runtimes-api.html#runtimes-api-response
		$(curl -X POST "http://${AWS_LAMBDA_RUNTIME_API}/2018-06-01/runtime/invocation/$request_id/response" -d ${response.encode_json()})
	} catch(e) {
		# https://docs.aws.amazon.com/lambda/latest/dg/runtimes-api.html#runtimes-api-invokeerror
		error = {
			'errorMessage': "TODO ${e}",
			'errorType': e.typeof().name,
			'stackTrace': ["TODO"]
		}
		$(curl -X POST "http://${AWS_LAMBDA_RUNTIME_API}/2018-06-01/runtime/invocation/$request_id/error" -d ${error.encode_json()})
	}
	log("Sent response")
}